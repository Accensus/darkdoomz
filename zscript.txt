version "2.5"

//Looked to Fancy World by Kinsie for how to do this
//Code template by Gutawer
/*Class SectorLightAdjust : EventHandler {
	override void WorldLoaded(WorldEvent e) {
		for (int i = 0; i < level.Sectors.Size(); i++) {
			level.Sectors[i].lightlevel /= CVar.GetCVar('darken_factor').GetInt();
		}
		for (int i = 0; i < level.Sides.Size(); i++) {
			level.Sides[i].light /= CVar.GetCVar('darken_factor').GetInt();
		}
	}
}*/

//Courtesy FishyClockwork, with modifications by Caligari87
Class SectorLightAdjust : EventHandler {
	Array<int> BaseLightLevels;
	int OldMode,OldSubtract,OldMaxbright,OldBlacklevel,OldDivfactor;

	override void WorldLoaded(WorldEvent e) {
		BaseLightLevels.Clear();
		for(int i = 0; i < Level.Sectors.Size(); i++) {
			BaseLightlevels.Push(Level.Sectors[i].LightLevel);
		}
	}

	override void WorldTick() {
		if(OldMode != CVar.GetCvar("ddz_mode").GetInt() ||
			OldSubtract != CVar.GetCvar("ddz_subtract").GetInt() ||
			OldMaxbright != CVar.GetCvar("ddz_maxbright").GetInt() ||
			OldDivfactor != CVar.GetCvar("ddz_divfactor").GetInt() ||
			OldBlacklevel != CVar.GetCvar("ddz_blacklevel").GetInt() ) {

			for(int i = 0; i < BaseLightLevels.Size(); i++) {
				switch(CVar.GetCvar("ddz_mode").GetInt()) {

					case 1: //subtract raw light level (simple fade)
						Level.Sectors[i].Lightlevel = BaseLightLevels[i] + CVar.GetCvar("ddz_subtract").GetInt();
						break;

					case 2: //max brightness level
						Level.Sectors[i].Lightlevel = BaseLightLevels[i]; //reset lightlevels
						if(BaseLightLevels[i] > CVar.GetCvar("ddz_maxbright").GetInt()) {
							Level.Sectors[i].Lightlevel = CVar.GetCvar("ddz_maxbright").GetInt();
						}
						break;

					case 3: //divide lightlevel
						if(CVar.GetCvar("ddz_divfactor").GetInt() != 0) {
							Level.Sectors[i].Lightlevel = BaseLightLevels[i] / CVar.GetCvar("ddz_divfactor").GetInt();
						}
						break;

					case 4: //raise black level
						Level.Sectors[i].Lightlevel = BaseLightLevels[i]; //reset lightlevels
						float NewLevel = BaseLightLevels[i] - CVar.GetCvar("ddz_blacklevel").GetInt(); //Subtract new low from normal levels
						float NewRange = 256 - CVar.GetCvar("ddz_blacklevel").GetInt(); //Calculate new fit range
						NewRange = clamp(NewRange, 1, 256); //avoid div by zero
						float LinearMultiplier = NewLevel / NewRange; //Multiplier for values above low
						Level.Sectors[i].Lightlevel = BaseLightLevels[i] * LinearMultiplier;
						break;

					default: //disable
						Level.Sectors[i].Lightlevel = BaseLightLevels[i]; //reset lightlevels
						break;
				}
			}
		}

		OldMode = CVar.GetCvar("ddz_mode").GetInt();
		OldSubtract = CVar.GetCvar("ddz_subtract").GetInt();
		OldMaxbright = CVar.GetCvar("ddz_maxbright").GetInt();
		OldDivfactor = CVar.GetCvar("ddz_divfactor").GetInt();
		OldBlacklevel = CVar.GetCvar("ddz_blacklevel").GetInt();
    }
}