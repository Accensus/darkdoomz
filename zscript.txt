version "2.5"

//Looked to Fancy World by Kinsie for how to do this
//Code template by Gutawer
/*Class SectorLightAdjust : EventHandler {
	override void WorldLoaded(WorldEvent e) {
		for (int i = 0; i < level.Sectors.Size(); i++) {
			level.Sectors[i].lightlevel /= CVar.GetCVar('darken_factor').GetInt();
		}
		for (int i = 0; i < level.Sides.Size(); i++) {
			level.Sides[i].light /= CVar.GetCVar('darken_factor').GetInt();
		}
	}
}*/

//Courtesy FishyClockwork, with modifications by Caligari87
class DarkDoomZ_SectorLightAdjust : EventHandler {
	Array<int> BaseLightLevels;
	int Mode,Preset,Custom,SkyMode;
	int OldMode,OldPreset,OldCustom,OldSkyMode;
	int BaseAdjustment, FinalAdjustment;
	bool IsSky;

	override void WorldLoaded(WorldEvent e) {
		BaseLightLevels.Clear();
		for(int i = 0; i < Level.Sectors.Size(); i++) {
			BaseLightlevels.Push(Level.Sectors[i].LightLevel);
		}
		ChangeLighting();
	}

	override void UiTick() {
		EventHandler.SendNetworkEvent("UpdateLights");
	}

	override void NetworkProcess(ConsoleEvent e) {
		if(e.Name == "UpdateLights") ChangeLighting();
	}

	void ChangeLighting() {
		Mode = CVar.GetCvar("ddz_mode").GetInt();
		Preset = CVar.GetCvar("ddz_preset").GetInt();
		Custom = CVar.GetCvar("ddz_custom").GetInt();
		SkyMode = CVar.GetCvar("ddz_skymode").GetInt();

		if(OldMode != Mode ||
		   OldPreset != Preset ||
		   OldCustom != Custom ||
		   OldSkyMode != Skymode) {

			BaseAdjustment = clamp((32*Preset)-Custom,0,256);
			for(int i = 0; i < BaseLightLevels.Size(); i++) {
				IsSky = (level.Sectors[i].GetTexture(0) == skyflatnum ||
						 level.Sectors[i].GetTexture(1) == skyflatnum);

				FinalAdjustment = BaseAdjustment;
				if(IsSky) FinalAdjustment *= (0.5 * SkyMode);

				switch(Mode) {
					case 1: //subtract raw light level (simple fade)
						Level.Sectors[i].Lightlevel = BaseLightLevels[i] - FinalAdjustment;
						break;
					case 2: //linear compression
						Level.Sectors[i].Lightlevel = BaseLightLevels[i] * (1.0-FinalAdjustment/256.0);
						break;
					case 3: //clamp max brightness level
						Level.Sectors[i].Lightlevel = clamp(BaseLightLevels[i],0,256-FinalAdjustment);
						break;
					default: //disable
						Level.Sectors[i].Lightlevel = BaseLightLevels[i]; //reset lightlevels
						break;
				}
			}
		}
		OldMode = Mode;
		OldPreset = Preset;
		OldCustom = Custom;
		OldSkyMode = SkyMode;
	}
}