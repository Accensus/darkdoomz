version "2.5"

//Looked to Fancy World by Kinsie for how to do this
//Code template by Gutawer
/*Class SectorLightAdjust : EventHandler {
	override void WorldLoaded(WorldEvent e) {
		for (int i = 0; i < level.Sectors.Size(); i++) {
			level.Sectors[i].lightlevel /= CVar.GetCVar('darken_factor').GetInt();
		}
		for (int i = 0; i < level.Sides.Size(); i++) {
			level.Sides[i].light /= CVar.GetCVar('darken_factor').GetInt();
		}
	}
}*/

//Courtesy FishyClockwork, with modifications by Caligari87
Class SectorLightAdjust : EventHandler {
	Array<int> BaseLightLevels;
	int Mode,Preset,Custom;
	int OldMode,OldPreset,OldCustom;
	int Adjustment;

	override void WorldLoaded(WorldEvent e) {
		BaseLightLevels.Clear();
		for(int i = 0; i < Level.Sectors.Size(); i++) {
			BaseLightlevels.Push(Level.Sectors[i].LightLevel);
		}
	}

	override void WorldTick() {
		Mode = CVar.GetCvar("ddz_mode").GetInt();
		Preset = CVar.GetCvar("ddz_preset").GetInt();
		Custom = CVar.GetCvar("ddz_custom").GetInt();
		if(OldMode != Mode || OldPreset != Preset || OldCustom != Custom ) {
			Adjustment = (32*Preset)-Custom;
			Adjustment = clamp(Adjustment,0,256);
			for(int i = 0; i < BaseLightLevels.Size(); i++) {
				switch(Mode) {

					case 1: //subtract raw light level (simple fade)
						Level.Sectors[i].Lightlevel = BaseLightLevels[i] - Adjustment;
						break;

					case 2: //linear compression
						Level.Sectors[i].Lightlevel = BaseLightLevels[i] * (1.0-Adjustment/256.0);
						break;

					case 3: //clamp max brightness level
						Level.Sectors[i].Lightlevel = clamp(BaseLightLevels[i],0,256-Adjustment);
						break;

					default: //disable
						Level.Sectors[i].Lightlevel = BaseLightLevels[i]; //reset lightlevels
						break;
				}
			}
		}

		OldMode = Mode;
		OldPreset = Preset;
		OldCustom = Custom;
    }
}